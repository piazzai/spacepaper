(define (generate-wallpaper name width height filename)
    (let* ((wallpaper (car (gimp-image-new width height RGB)))
        (object (car (gimp-file-load-layer RUN-NONINTERACTIVE wallpaper (string-append (string-append "input/" name) ".xcf"))))
        (backdrop (car (gimp-layer-new wallpaper width height RGBA-IMAGE "bg" 100 LAYER-MODE-NORMAL)))
        (grain (car (gimp-layer-new wallpaper width height RGBA-IMAGE "grain" 15 LAYER-MODE-GRAIN-MERGE)))
        (gradient-x (car (gimp-layer-new wallpaper width height RGBA-IMAGE "gradient-x" 100 LAYER-MODE-SOFTLIGHT)))
        (gradient-y (car (gimp-layer-new wallpaper width height RGBA-IMAGE "gradient-y" 100 LAYER-MODE-SOFTLIGHT)))
        (center-x (/ width 2))
        (center-y (/ height 2))
        (scale-factor (if (> width height)
            (if (< height 2000) (/ height 2000) 1)  
            (if (< width 2000) (/ width 2000) 1)))
        (object-x1 (- center-x (* scale-factor 850)))
        (object-x2 (+ center-x (* scale-factor 850)))
        (object-y1 (- center-y (* scale-factor 850)))
        (object-y2 (+ center-y (* scale-factor 850))))
    (gimp-image-insert-layer wallpaper object 0 0)
    (gimp-context-set-foreground (car (gimp-image-pick-color wallpaper object 0 0 TRUE TRUE 850)))
    (gimp-image-insert-layer wallpaper backdrop 0 1)
    (gimp-drawable-fill backdrop FILL-FOREGROUND)
    (gimp-image-insert-layer wallpaper grain 0 0)
    (gimp-context-set-pattern "Film Grain (Vertical)")
    (gimp-drawable-fill grain FILL-PATTERN)
    (plug-in-spread RUN-NONINTERACTIVE wallpaper grain 128 128)
    (gimp-context-set-foreground "black")
    (gimp-image-insert-layer wallpaper gradient-y 0 0)
    (gimp-image-insert-layer wallpaper gradient-x 0 0)
    (gimp-item-transform-scale object object-x1 object-y1 object-x2 object-y2)
    (gimp-edit-blend gradient-y BLEND-FG-TRANSPARENT NORMAL-MODE GRADIENT-RADIAL 100 0 REPEAT-NONE TRUE TRUE 3 0.2 TRUE center-x center-y center-x 0)
    (gimp-edit-blend gradient-x BLEND-FG-TRANSPARENT NORMAL-MODE GRADIENT-RADIAL 100 0 REPEAT-NONE TRUE TRUE 3 0.2 TRUE center-x center-y 0 center-y)
    (if (< width height) (gimp-image-raise-item-to-top wallpaper gradient-y))
    (if (equal? name "saturn")
        (let* ((rings (car (gimp-file-load-layer RUN-NONINTERACTIVE wallpaper "input/rings.xcf")))
            (rings-x1 (+ (- center-x (* scale-factor 1652)) (* scale-factor 97)))
            (rings-x2 (+ (+ center-x (* scale-factor 1652)) (* scale-factor 97)))
            (rings-y1 (+ (- center-y (* scale-factor 1134)) (* scale-factor 95)))
            (rings-y2 (+ (+ center-y (* scale-factor 1134)) (* scale-factor 95))))
        (gimp-image-insert-layer wallpaper rings 0 4)
        (gimp-item-transform-scale rings rings-x1 rings-y1 rings-x2 rings-y2)
        (gimp-image-select-item wallpaper CHANNEL-OP-ADD rings))
        (gimp-image-select-item wallpaper CHANNEL-OP-ADD object))
    (gimp-selection-invert wallpaper)
    (gimp-layer-add-mask gradient-x (car (gimp-layer-create-mask gradient-x ADD-MASK-SELECTION)))
    (gimp-layer-add-mask gradient-y (car (gimp-layer-create-mask gradient-y ADD-MASK-SELECTION)))
    (gimp-selection-none wallpaper)
    (gimp-file-save RUN-NONINTERACTIVE wallpaper (car (gimp-image-flatten wallpaper)) filename filename)
    (gimp-image-delete wallpaper)))
